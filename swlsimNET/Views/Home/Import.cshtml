@{
    ViewData["Title"] = "Import";
}

@model Settings
<div class="col-xs-12" style="height:110px;"></div>

<div>
    <h1>Import Character Stats</h1>
    <div class="col-lg-12" align="right">
        <label style="margin-right: 10px">Presets:</label>
        <button id="1" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetHammer">Hammer</button>
        <button id="2" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetBlood">Blood</button>
        <button id="3" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetBlade">Blade</button>
        <button id="4" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetChaos">Chaos</button>
        <button id="5" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetElemental">Elemental</button>
        <button id="6" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetPistols">Pistols</button>
        <button id="7" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetFist">Fist</button>
        <button id="8" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetShotgun">Shotgun</button>
        <button id="9" type="button" class="btn btn-purple waves-effect waves-light" onclick="presetRifle">Assault Rifle</button>
    </div>
    <form method="post" id="stats">
        <div class="col-md-3">


            @Html.LabelFor(m => m.PrimaryWeapon)
            @Html.ValidationMessageFor(m => m.PrimaryWeapon, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.PrimaryWeapon,
                Model.WeaponTypeList,
                "Select primary weapon", new { Class = "form-control select2" })

            @Html.LabelFor(m => m.SecondaryWeapon)
            @Html.ValidationMessageFor(m => m.SecondaryWeapon, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.SecondaryWeapon,
                Model.WeaponTypeList,
                "Select secondary weapon", new { Class = "form-control select2" })

            @Html.LabelFor(m => m.PrimaryWeaponAffix)
            @Html.ValidationMessageFor(m => m.PrimaryWeaponAffix, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.PrimaryWeaponAffix,
                Model.WeaponAffixesList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.SecondaryWeaponAffix)
            @Html.ValidationMessageFor(m => m.SecondaryWeaponAffix, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.SecondaryWeaponAffix,
                Model.WeaponAffixesList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.PrimaryWeaponProc)
            @Html.ValidationMessageFor(m => m.PrimaryWeaponProc, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.PrimaryWeaponProc,
                Model.WeaponProcList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.SecondaryWeaponProc)
            @Html.ValidationMessageFor(m => m.SecondaryWeaponProc, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.SecondaryWeaponProc,
                Model.WeaponProcList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.Neck)
            @Html.ValidationMessageFor(m => m.Neck, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.Neck,
                Model.NeckTalismanList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.Luck)
            @Html.ValidationMessageFor(m => m.Luck, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.Luck,
                Model.LuckTalismanList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.Head)
            @Html.ValidationMessageFor(m => m.Head, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.Head,
                Model.HeadTalismanList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.Gadget)
            @Html.ValidationMessageFor(m => m.Gadget, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.Gadget,
                Model.GadgetList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.CombatPower)
            @Html.ValidationMessageFor(m => m.CombatPower, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.CombatPower, new { Class = "form-control" })

            @Html.LabelFor(m => m.GlanceReduction)
            @Html.ValidationMessageFor(m => m.GlanceReduction, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.GlanceReduction, new { Class = "form-control" })

            @Html.LabelFor(m => m.CriticalChance)
            @Html.ValidationMessageFor(m => m.CriticalChance, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.CriticalChance, new { Class = "form-control" })

            @Html.LabelFor(m => m.CritPower)
            @Html.ValidationMessageFor(m => m.CritPower, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.CritPower, new { Class = "form-control" })

            @Html.LabelFor(m => m.BasicSignet)
            @Html.ValidationMessageFor(m => m.BasicSignet, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.BasicSignet, new { Class = "form-control" })

            @Html.LabelFor(m => m.PowerSignet)
            @Html.ValidationMessageFor(m => m.PowerSignet, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.PowerSignet, new { Class = "form-control" })

            @Html.LabelFor(m => m.EliteSignet)
            @Html.ValidationMessageFor(m => m.EliteSignet, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.EliteSignet, new { Class = "form-control" })

            @Html.LabelFor(m => m.WaistSignet)
            @Html.ValidationMessageFor(m => m.WaistSignet, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.WaistSignet, new { Class = "form-control" })

        </div>

        <div class="col-md-9" style="margin-bottom: 10px">
            @Html.LabelFor(m => m.Apl)
            @Html.ValidationMessageFor(m => m.Apl, "", new { @class = "text-danger" })
            @Html.TextAreaFor(m => m.Apl, new { Class = "form-control" })
        </div>

        <div class="col-md-9" style="margin-bottom: 10px">
            @Html.LabelFor(m => m.Passives)
            @*@Html.ValidationMessageFor(m => m.Passives, "", new { @class = "text-danger" })*@
            @Html.DropDownListFor(m => m.Passive1, Model.Passives, new { Class = "form-control select2" })
            @Html.DropDownListFor(m => m.Passive2, Model.Passives, new { Class = "form-control select2" })
            @Html.DropDownListFor(m => m.Passive3, Model.Passives, new { Class = "form-control select2" })
            @Html.DropDownListFor(m => m.Passive4, Model.Passives, new { Class = "form-control select2" })
            @Html.DropDownListFor(m => m.Passive5, Model.Passives, new { Class = "form-control select2" })
        </div>
        <div id="checkbox-container">
            <div>
                @Html.CheckBoxFor(m => m.OpeningShot)
                @Html.LabelFor(m => m.OpeningShot)
            </div>

            <div>
                @Html.CheckBoxFor(m => m.Exposed)
                @Html.LabelFor(m => m.Exposed)
            </div>

            <div>
                @Html.CheckBoxFor(m => m.HeadSignetIsCdr)
                @Html.LabelFor(m => m.HeadSignetIsCdr)
            </div>
            <div>
                @Html.CheckBoxFor(m => m.Savagery)
                @Html.LabelFor(m => m.Savagery)
            </div>
        </div>
        <input type="submit" value="Start Simulation" formaction=@Url.Action("Import") formmethod="post" class="btn btn-default waves-effect waves-light" />

    </form>
</div>

<script type="text/javascript">


    function onLoad() {

    }

    document.addEventListener("DOMContentLoaded", onLoad);



    var checkboxValues = JSON.parse(localStorage.getItem('checkboxValues')) || {},
        $checkboxes = $('#OpeningShot, #Exposed, #HeadSignetIsCdr, #Savagery');

    $checkboxes.on("change", function () {
        $checkboxes.each(function () {
            checkboxValues[this.id] = this.checked;
        });

        localStorage.setItem("checkboxValues", JSON.stringify(checkboxValues));
    });

</script>