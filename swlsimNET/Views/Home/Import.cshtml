@{
    ViewData["Title"] = "Import";
}

@model Settings
<div class="col-xs-12" style="height:110px;"></div>

<div>
    <h1>Import Character Stats</h1>
    <form method="post">
        <div class="col-md-3">
            
            
                @Html.LabelFor(m => m.PrimaryWeapon)
                @Html.ValidationMessageFor(m => m.PrimaryWeapon, "", new { @class = "text-danger" })
                @Html.DropDownListFor(m => m.PrimaryWeapon,
                    Model.WeaponTypeList,
                    "Select primary weapon", new {Class = "form-control select2" })            
            
                @Html.LabelFor(m => m.SecondaryWeapon)
                @Html.ValidationMessageFor(m => m.SecondaryWeapon, "", new { @class = "text-danger" })
                @Html.DropDownListFor(m => m.SecondaryWeapon,
                    Model.WeaponTypeList,
                    "Select secondary weapon", new { Class = "form-control select2" })

            @Html.LabelFor(m => m.PrimaryWeaponAffix)
            @Html.ValidationMessageFor(m => m.PrimaryWeaponAffix, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.PrimaryWeaponAffix,
                Model.WeaponAffixesList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.SecondaryWeaponAffix)
            @Html.ValidationMessageFor(m => m.SecondaryWeaponAffix, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.SecondaryWeaponAffix,
                Model.WeaponAffixesList,
                new { Class = "form-control select2" })
            
            @Html.LabelFor(m => m.PrimaryWeaponProc)
            @Html.ValidationMessageFor(m => m.PrimaryWeaponProc, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.PrimaryWeaponProc,
                Model.WeaponProcList,
                new { Class = "form-control select2" })
            
            @Html.LabelFor(m => m.SecondaryWeaponProc)
            @Html.ValidationMessageFor(m => m.SecondaryWeaponProc, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.SecondaryWeaponProc,
                Model.WeaponProcList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.TargetType)
            @Html.ValidationMessageFor(m => m.TargetType, "", new { @class = "text-danger" })
            @Html.DropDownListFor(m => m.TargetType,
                Model.TargetTypeList,
                new { Class = "form-control select2" })

            @Html.LabelFor(m => m.CombatPower)
            @Html.ValidationMessageFor(m => m.CombatPower, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.CombatPower, new { Class = "form-control" })

            @Html.LabelFor(m => m.GlanceReduction)
            @Html.ValidationMessageFor(m => m.GlanceReduction, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.GlanceReduction, new { Class = "form-control" })

            @Html.LabelFor(m => m.CriticalChance)
            @Html.ValidationMessageFor(m => m.CriticalChance, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.CriticalChance, new { Class = "form-control" })
                
            @Html.LabelFor(m => m.CritPower)
            @Html.ValidationMessageFor(m => m.CritPower, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.CritPower, new { Class = "form-control" })

            @Html.LabelFor(m => m.BasicSignet)
            @Html.ValidationMessageFor(m => m.BasicSignet, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.BasicSignet, new { Class = "form-control" }) 
                
            @Html.LabelFor(m => m.PowerSignet)
            @Html.ValidationMessageFor(m => m.PowerSignet, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.PowerSignet, new { Class = "form-control" })
            
            @Html.LabelFor(m => m.EliteSignet)
            @Html.ValidationMessageFor(m => m.EliteSignet, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.EliteSignet, new { Class = "form-control" })
            
            @Html.LabelFor(m => m.WaistSignet)
            @Html.ValidationMessageFor(m => m.WaistSignet, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.WaistSignet, new { Class = "form-control" })
                
        </div>

        <div class="col-md-9" style="margin-bottom: 10px">
            @Html.LabelFor(m => m.Apl)
            @Html.ValidationMessageFor(m => m.Apl, "", new { @class = "text-danger" })
            @Html.TextAreaFor(m => m.Apl, new { Class = "form-control" })
        </div>
        
        <div class="col-md-9" style="margin-bottom: 10px">
            <input type="submit" value="Blood/Fist" formaction=@Url.Action("SetPresetBloodFist") formmethod="post" class="btn btn-primary" />
            <input type="submit" value="Hammer/Fist" formaction=@Url.Action("SetPresetHammerFist") formmethod="post" class="btn btn-primary" />
            <input type="submit" value="Hammer/Pistol" formaction=@Url.Action("SetPresetHammerPistol") formmethod="post" class="btn btn-primary" />
            <input type="submit" value="Hammer/Shotgun" formaction=@Url.Action("SetPresetHammerShotgun") formmethod="post" class="btn btn-primary" />
        </div>
        
        <div class="col-md-9" style="margin-bottom: 10px">
            @Html.LabelFor(m => m.Passives)
            @*@Html.ValidationMessageFor(m => m.Passives, "", new { @class = "text-danger" })*@
            @Html.DropDownListFor(m => m.Passive1, Model.Passives, new { Class = "form-control select2" })
            @Html.DropDownListFor(m => m.Passive2, Model.Passives, new { Class = "form-control select2" })
            @Html.DropDownListFor(m => m.Passive3, Model.Passives, new { Class = "form-control select2" })
            @Html.DropDownListFor(m => m.Passive4, Model.Passives, new { Class = "form-control select2" })
            @Html.DropDownListFor(m => m.Passive5, Model.Passives, new { Class = "form-control select2" })
        </div>
            
        <div>
            @Html.CheckBoxFor(m => m.OpeningShot)
            <label for="OpeningShot">Opening Shot every ~ 20 seconds.</label>
        </div>

        <div>
            @Html.CheckBoxFor(m => m.Exposed)
            <label for="Exposed">Exposed with 100% uptime</label>
        </div>

        <div>
            @Html.CheckBoxFor(m => m.HeadSignetIsCdr)
            <label for="HeadSignetIsCdr">Head signet is CDR</label>
        </div>
        <div>
            @Html.CheckBoxFor(m => m.Savagery)
            <label for="Savagery">Enable Savagery</label>
        </div>

        <input type="submit" value="Start Simulation" formaction=@Url.Action("Import") formmethod="post" class="btn btn-default waves-effect waves-light" />
  
    </form>

    <div id="full-width-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="full-width-modalLabel" aria-hidden="true" style="display: none;">
        <div class="modal-dialog modal-full">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title" id="full-width-modalLabel">Save & Load</h4>
                </div>
                <div class="modal-body">
                    <h4>Here you can save & load your settings. (WIP)</h4>
                    <button class="loginBtn loginBtn--facebook">
                        Login with Facebook
                    </button>

                    <button class="loginBtn loginBtn--google">
                        Login with Google
                    </button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Save & Close</button>
                    <button type="button" class="btn btn-primary waves-effect waves-light">Load</button>
                </div>
            </div>
        </div>
    </div>
<div class="col-md-12" style="margin-bottom: 10px"></div>
    <button style="margin-top: 10px"class="btn btn-primary waves-effect waves-light" data-toggle="modal" data-target="#full-width-modal">Save & Load</button>


</div>