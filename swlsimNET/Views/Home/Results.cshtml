@{
    ViewData["Title"] = "Results";

    
    var totalCount = Model.SpellBreakdownList.Select(spell => spell.Executes).ToList();
    var totalCritChance = Model.SpellBreakdownList
        .Where(spell => spell.DamagePerExecution >= 1)
        .Select(spell => spell.CritChance)
        .ToList();
    var avarageCritChance = totalCritChance.Sum() / totalCritChance.Count;
    var spellNameList = Model.SpellBreakdownList.Select(spell => spell.Name).ToList();
    var spellDpsPercentage = Model.SpellBreakdownList.Select(spell => spell.DpsPercentage).ToList();

}

@model Report

@functions {
    public int TotalCount { get; set; }
}


<div class="col-xs-12" style="height:110px;"></div>
<div>
    <h1>
    DPS = @Model.TotalDps.ToString("F0")
    </h1>
    <p>Here is some data:</p>

    <div class="row">
        <div class="col-lg-6">
            <div class="card-box">
                <h4 class="m-t-0 header-title"><b>Spell Breakdown</b></h4>
                <canvas id="PieChart"></canvas>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card-box">
                <h4 class="m-t-0 header-title"><b>Energy Timeline</b></h4>
                <canvas id="LineChart"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <h4 class="m-t-0 header-title"><b>Spell Breakdown</b></h4>
        <div class="p-20">
            <table class="table table table-hover m-0">
                <thead>
                <tr>
                    <th>Spell</th>
                    <th>DPS</th>
                    <th>DPS%</th>
                    <th>Executes</th>
                    <th>DPE</th>
                    <th>Type</th>
                    <th>Count</th>
                    <th>Avarage</th>
                    <th>Crit%</th>
                </tr>
                </thead>
                <tbody>

                
                @foreach (var spell in Model.SpellBreakdownList)
                {
                    <tr>
                        <th scope="row">@spell.Name</th>
                        <td>@spell.DamagePerSecond.ToString("F0")</td>
                        <td>@spell.DpsPercentage.ToString("F2")</td>
                        <td>@spell.Executes</td>
                        <td>@spell.DamagePerExecution.ToString("F0")</td>
                        <td>@spell.SpellType</td>
                        <td>@spell.Amount</td>
                        <td>@spell.Average.ToString("F0")</td>
                        <td>@spell.CritChance.ToString("F1")</td>
                    </tr>

                }
                <tr>
                    <th scope="row">Total</th>
                    <td>@Model.TotalDps.ToString("F0")</td>
                    <td>100%</td>
                    <td>N/A</td>
                    <td>N/A</td>
                    <td>N/A</td>
                    <td>@totalCount.Sum()</td>
                    <td>N/A</td>
                    <td>@avarageCritChance.ToString("F")</td>
                </tr>

                </tbody>
            </table>
        </div>
    </div>
    <div class="col-lg-12">
        <h4 class="m-t-0 header-title"><b>Buff Breakdown</b></h4>
        <div class="p-20">
            <table class="table table table-hover m-0">
                <thead>
                <tr>
                    <th>Buff</th>
                    <th>Start</th>
                    <th>Refresh</th>
                    <th>Interval</th>
                    <th>Executes</th>
                    <th>Count</th>
                    <th>Uptime%</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th scope="row">Smash</th>
                    <td>3</td>
                    <td>4</td>
                    <td>6</td>
                    <td>3</td>
                    <td>4</td>
                    <td>6</td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">

var arrNames = JSON.parse('@Html.Raw(Json.Serialize(spellNameList))');
var arrPercentages = JSON.parse('@Html.Raw(Json.Serialize(spellDpsPercentage))');
var timeLine = JSON.parse('@Html.Raw(Json.Serialize(Model.EnergyList))');

function fillArrayWithAt(target, source, at) {
  var array = [];
  for (var i = 0, len = source.length; i < len; ++i)
    array[i] = source[i];
  target[at] = array;
}

function makePropertyGetter(property) {
  return function(obj) {
    return obj[property];
  }
}

function parseData() {
  var arrFilteredNames = [];
  var arrFilteredPercentages = [];
  var name;
  var percentage;
  for (var i = 0, j = -1, len = Math.min(arrPercentages.length, arrNames.length); i < len; ++i) {
    percentage = arrPercentages[i];
    if (percentage === 0) continue;
    name = arrNames[i];
    arrFilteredNames[++j] = name;
    arrFilteredPercentages[j] = percentage;

  }
  var arrSeparatedValues = [arrFilteredNames, arrFilteredPercentages, null, null, null];
  fillArrayWithAt(arrSeparatedValues, timeLine.map(makePropertyGetter("time")), 2);
  fillArrayWithAt(arrSeparatedValues, timeLine.map(makePropertyGetter("primary")), 3);
  fillArrayWithAt(arrSeparatedValues, timeLine.map(makePropertyGetter("secondary")), 4);
  return arrSeparatedValues;
}


function drawChart() {
  var ctx = document.getElementById("PieChart").getContext("2d");
  var arrSeparatedValues = parseData();
  new Chart(ctx,
    {
      type: 'pie',
      data: {
        labels: arrSeparatedValues[0],
        datasets: [
          {
            backgroundColor: ["#37474F", "#455A64", "#546E7A", "#607D8B", "#78909C", "#90A4AE", "#B0BEC5", "#CFD8DC", "#ECEFF1" ],
            data: arrSeparatedValues[1]
          }
        ]
      }
    });

  new Chart(document.getElementById("LineChart"), {
    type: 'line',
    data: {
      labels: arrSeparatedValues[2],
      datasets: [{
          data: arrSeparatedValues[4],
          label: "Secondary Energy",
          borderColor: "#3e95cd",
          fill: false
        },{
          data: arrSeparatedValues[3],
          label: "Primary Energy",
          borderColor: "#c45850",
          fill: false
        }
      ]
    },
    options: {
      title: {
        display: false,
        text: 'Primary/Secondary Energy'
      }
    }
  });
}

$(document).ready(drawChart);
</script>